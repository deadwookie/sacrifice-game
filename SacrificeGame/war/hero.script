go.property("spot", 0)
go.property("linear_velocity", 150)

local function get_spot_url(spot_ind)
	return msg.url("level_1", "/war/spot_" .. spot_ind, hash("spot"))
end

function init(self)
	msg.post("#legs", "disable")
	self.moving = false
end

local function go_to(self, move_to_ind)
	self.moving = true
	local pos = go.get_position()
	local targetPos = go.get_position(get_spot_url(move_to_ind))
	local t = vmath.length(targetPos - pos) / self.linear_velocity
	local angle = go.get(".", "euler.z")
	local targetAngle = (math.pi / 2 + math.atan2(targetPos.y - pos.y, targetPos.x - pos.x)) * 180 / math.pi

	msg.post("#legs", "enable")
	go.animate(".", "position", go.PLAYBACK_ONCE_FORWARD, targetPos, go.EASING_LINEAR, t, 0, function ()
		self.spot = move_to_ind
		self.moving = false
		msg.post("#legs", "disable")
	end)
	go.animate(".", "euler.z", go.PLAYBACK_ONCE_FORWARD, targetAngle, go.EASING_INQUINT, t / 4, 0)
end

function on_message(self, message_id, message, sender)
	if (message_id == hash("move_to") and not self.moving) then
		go_to(self, message["spot"])
	elseif (message_id == hash("move_next") and not self.moving) then
		go_to(self, go.get(get_spot_url(self.spot), "next_spot"))
	end
end
