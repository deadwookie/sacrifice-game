local function button_unpress(button)
	gui.set_enabled(gui.get_node(button .. "/button_down"), false)
	gui.set_enabled(gui.get_node(button .. "/button_up"), true)
end

local function button_press(button)
	gui.set_enabled(gui.get_node(button .. "/button_down"), true)
	gui.set_enabled(gui.get_node(button .. "/button_up"), false)
end

local function button_hide(button)
	gui.set_enabled(gui.get_node(button .. "/button_down"), false)
	gui.set_enabled(gui.get_node(button .. "/button_up"), false)
end

local function button_show(button)
	button_unpress(button)
end

local function exit_game()
	msg.post("@system:", "exit", {code = 0})
end

local function load_level(level_id)
	msg.post("main:/loader#script", "load_level", { level_id = level_id })
end

local function pause_level()
	msg.post("main:/loader#script", "pause_level")
	msg.post("#", "show_menu")
end

local function resume_level()
	msg.post("#", "hide_menu")
	msg.post("main:/loader#script", "resume_level")
end

local function complete_level() 
	msg.post("#", "show_menu")
end

function init(self)
	msg.post("#", "acquire_input_focus")
	self.buttons =  { "new_game", "about", "resume_game", "exit_game" }
	
	-- On-screen controls off
	msg.post("main:/controls#gui", "off")
	
	-- Disable Resume button
	self.resume_game_enabled = false
	msg.post("#", "disable_button", { button = "resume_game" })

	msg.post("/sound#menu_theme", "play_sound")
end

function on_message(self, message_id, message, sender)
	-- Level loaded, so hide the main menu
	if message_id == hash("hide_menu") then
		msg.post("/sound#menu_theme", "stop_sound")
		-- Let the loaded collection take over.
		msg.post("#", "release_input_focus")
		-- Disable the main menu.
		msg.post("main_menu", "disable")
		-- On-screen controls on
		msg.post("main:/controls#gui", "on")

	-- Level unloaded, so show main menu	
	elseif message_id == hash("show_menu") then
		-- Enable the main menu.
		msg.post("main_menu", "enable")
		-- On-screen controls off
		msg.post("main:/controls#gui", "off")
		-- Take back input.
		msg.post("#", "acquire_input_focus")
		msg.post("/sound#menu_theme", "play_sound")
	elseif message_id == hash("pause_level") then
		self.resume_game_enabled = true
		button_show("resume_game")
		pause_level()
	elseif message_id == hash("finish_level") then
		self.resume_game_enabled = false
		button_hide("resume_game")
		complete_level()
	elseif message_id == hash("disable_button") then
		button_hide(message["button"])
	end
end

function on_input(self, action_id, action)
	local x = action.x
	local y = action.y
	if action_id == hash("click") and action.pressed then
		for i, b in pairs(self.buttons) do
			if gui.pick_node(gui.get_node(b .. "/button_up"), x, y) then
				msg.post("/sound#click", "play_sound")
				button_press(b)
			end
		end
	elseif action_id == hash("click") and action.released then
		-- Reset them
		for i, b in pairs(self.buttons) do
			if b ~= "resume_game" or self.resume_game_enabled then
				button_unpress(b)
			end
		end

		for i, button in ipairs(self.buttons) do
			if gui.pick_node(gui.get_node(button .. "/button_down"), x, y) then
				msg.post("/sound#release", "play_sound")
				if button == "exit_game" then
					exit_game()
				elseif button == "about" then
					load_level("about")
				elseif button == "new_game" then
					load_level("1")
				elseif button == "resume_game" then
					resume_level()
				end
			end
		end
	end
end

function on_reload(self)
	msg.post(".", "pause_game")
end
