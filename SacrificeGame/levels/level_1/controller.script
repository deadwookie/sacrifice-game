go.property("squad_count", 16)

local function game_over(self, result)
	self.game_over = true

	msg.post("game_over", "game_over", { result = result })
	msg.post("game_over", "enable")
	msg.post("main:/loader#script", "pause_level")
end

local function another_one_bite_the_dust(self, hero)
	self.alive_count = self.alive_count - 1
	if self.alive_count == 0 then
		game_over(self, hash("lose"))
	end
end

local function another_one_saved(self, hero)
	game_over(self, hash("win"))
end

local function spawn(self)
	self.alive_count = 0
	-- Place squad
	self.squad = {}
	local step = vmath.vector3(-5, 0.5, -0.001)
	local pos = go.get("/war/spots/spot_0", "position")
	local rot = vmath.quat_rotation_z(math.pi / 2)
	for i = 0, self.squad_count - 1 do
		-- Spawn an hero
		local step_mod = vmath.vector3(1, math.random() > 0.5 and 1 or -1, 1) 
		local hero_id = factory.create("#hero_factory", pos + vmath.mul_per_elem(step, step_mod) * i, rot)
		-- Child it under self
		msg.post(hero_id, "set_parent", { parent_id = go.get_id() })
		-- Store the hero root object for easy access.
		table.insert(self.squad, hero_id)
		self.alive_count = self.alive_count + 1
	end
end

local function move_squad(self)
	for ind, hero_id in ipairs(self.squad) do
		if ind <= self.max_ind then
			msg.post(hero_id, "move_next", { delay = ind })
		end
	end
	self.max_ind = self.max_ind + 1
end

function init(self)
	-- Tell input controls to direct messages here
	msg.post("main:/controls#gui", "aquire_controls")
	self.game_over = false
	self.max_ind = 1
	msg.post("game_over", "disable")
	spawn(self)
end

function final(self)
	-- Tell input controls to release redirect messages here
	msg.post("main:/controls#gui", "release_controls")
end

function on_message(self, message_id, message, sender)
	if message_id == hash("action") then
		if message["action"] == hash("back") then
			if self.game_over then
				msg.post("game_over", "disable")
				msg.post("main:/main_menu#gui", "finish_level")
			else
				msg.post("main:/main_menu#gui", "pause_level")
			end
		elseif message["action"] == hash("move") then
			move_squad(self)
		end
	elseif message_id == hash("death") then
		another_one_bite_the_dust(self, sender)
	elseif message_id == hash("save") then
		another_one_saved(self, sender)
	end
end
